# Пример соединения client - haproxy по протоколу TLS (односторонняя аутентификация) и haproxy - web-сервер maxk.avest.by по протоколу TLS (односторонняя аутентификация)
# Дополнительно используется haproxy Proxy Protocol (для проброса IP клиента)
# В случае соединения по http (порт 80) haproxy передает клиенту данные соединения с maxk.avest.by:80

# Логика:
# В случае соединения по 80 haproxy передает клиенту данные соединения с maxk.avest.by:80
# haproxy Proxy Protocol не применяется (см. пояснение backend http_out)
#
# В случае соединения через порт 443 браузер клиента устанавливает tls-соединение с haproxy. При соединении с клиентом haproxy использует (см. frontend https_in)
# 1. Сертификат сервера из файла /opt/AvTLSSrv/conf/TLS/server.cer.pem (см. crt в bind, раздел frontend https_in) и личный ключ либо в этом файле, либо в файле server.cer.pem.key.
# 2. В каталоге /opt/AvTLSSrv/conf/TLS/chain (см. issuers-chain-path раздел global) файл с цепочкой сертификатов УЦ (от издателя до самоподписанного) для сертификата сервера.
# Примечание: каталог, определенный параметром ca-base (раздел global), может быть пуст
#
# Haproxy при соединении с сервером maxk.avest.by может использовать (см. раздел backend https_out)
# вариант TLS-соединения без проверки сертификатов сервера ("verify none" опции server)
# вариант TLS-соединения с проверкой сертификата сервера (файл с сертификатами УЦ сервера в параметре ca-file опции server)
# Примечания: 
# 1. В файле /etc/hosts должна содержаться строка, устанавливающая соответствие доменного имени "maxk.avest.by" с ip
#
# 2. Для проверки СОС в цепочке сервера может быть указано значение crl-file в опции server (файл с СОС УЦ)
# 3. Для соединения с двусторонней аутентификацией может быть указано значение crt-file в опции server (для загрузки сертификата haproxy и ассоциированного с ним личного ключа)

# При успешном установлении tls-соединения client - haproxy, организуется соединение haproxy - maxk.avest.by и клиенту передаются данные соединения с maxk.avest.by:443

global
	# Для включения записи протокола событий в файл необходимо:
	# 1. Расскомментарить все строки в этом файле
	#    с настройками, имеющим отношение к протоколам событий
	#
	# 2. Скорректировать /etc/rsyslog.conf 
	#    расскоментировать разделы с imudp и imtcp
	#    и добавить строки (с учетом содержимого данного примера)
	#     local0.* /var/log/haproxy.log
	#     local1.* /var/log/haproxy_notice.log
	# 3. Перезапустит rsyslog - sudo /etc/init.d/rsyslog restart

        # Вести обработку в файл с протоколом событий в /dev/log сохраняя в local0
#	log /dev/log	local0
#	log /dev/log	local1 notice

#	chroot /opt/AvTLSSrv
#	stats socket /opt/AvTLSSrv/logs/haproxy-admin.sock mode 660 level admin

	stats timeout 30s

#	user haproxy
#	group haproxy

	daemon

	# Путь к файлам с сертификатами корневых УЦ, используемых для построения цепочки сертификатов, передаваемых клиенту
	ca-base /opt/AvTLSSrv/conf/TLS/ca
	# Путь к файлам с сертификатами и личными ключами сервера
#	crt-base /opt/AvTLSSrv/conf/TLS

	# каталог с файлами, в каждом из которых сертификаты УЦ из цепочки сертификатов сервера, передаваемой клиенту
	issuers-chain-path /opt/AvTLSSrv/conf/TLS/chain

	# параметры по умолчанию для bind в разделе frontend
	ssl-default-bind-ciphers DHT-BIGN-BELT-CTR-HBELT:DHE-BIGN-BELT-CTR-HBELT:ALL
	# отключить возобнобновление сессии по состоянию сервера, сохраненному у клиента)
	ssl-default-bind-options no-tls-tickets 
#	ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

	# параметры по умолчанию для server в разделе backend
	ssl-default-server-ciphers DHT-BIGN-BELT-CTR-HBELT:DHE-BIGN-BELT-CTR-HBELT:ALL
#	ssl-default-bind-options no-tlsv10 no-tlsv11 force-tlsv12
#	ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

	# curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
#	ssl-dh-param-file /path/to/dhparam

#	tune.ssl.default-dh-param 2048

defaults
#	mode	http

	# Включить в протокол события о трафике
#	log	global
	
	# Включение или выключение сохранения в файл с протоколом событий о null соединениях
#	option	dontlognull
#	no option dontlognull

	timeout connect 5000
	timeout client  50000
	timeout server  50000
#	errorfile 400 /opt/AvTLSSrv/errors/400.http
#	errorfile 403 /opt/AvTLSSrv/errors/403.http
#	errorfile 408 /opt/AvTLSSrv/errors/408.http
#	errorfile 500 /opt/AvTLSSrv/errors/500.http
#	errorfile 502 /opt/AvTLSSrv/errors/502.http
#	errorfile 503 /opt/AvTLSSrv/errors/503.http
#	errorfile 504 /opt/AvTLSSrv/errors/504.http

frontend http_in
	mode http
	# Определение расширенного формата записей протокола события
	# добавляются сообщения о HTTP-запросах, состоянии сеанса и таймеров
#	option	httplog
	bind *:80
	default_backend http_out

backend http_out
	mode http
	balance roundrobin
	server node maxk.avest.by:80 maxconn 50 check
	# send-proxy используем в случае применения haproxy Proxy Protocol
	# ВНИМАНИЕ! Чтобы работало, необходимо включить на web-сервере apache по умолчания опцию RemoteIPProxyProtocol on
#	server node maxk.avest.by:80  maxconn 50 check  send-proxy

frontend https_in
	mode tcp
	# Определение расширенного формата записей протокола события
#	option	tcplog

	# соединение с односторонней аутентификацией (только сервера)
	# цепочка сертификатов УЦ, передаваемая клиенту, формируется исходя из содержимого файлов каталога, заданного в опции issuers-chain-path (см.выше)
	bind *:443 ssl crt /opt/AvTLSSrv/conf/TLS/server.cer.pem
	# с явно указанным использованием tls 1.2 и дополнительно (к основным) белорусских криптопротоколов
#	bind *:443 ssl force-tlsv12 ciphers DHT-BIGN-BELT-CTR-HBELT:DHE-BIGN-BELT-CTR-HBELT:ALL crt /opt/AvTLSSrv/conf/TLS/server.cer.pem

	default_backend https_out

backend https_out
	mode tcp
	balance roundrobin
	# соединение БЕЗ TLS
#	server node maxk.avest.by:80 maxconn 50 check
	# соединение по TLS без проверки сертификата сервера
#	server node maxk.avest.by:443 ssl verify none
	# send-proxy используем в случае применения haproxy Proxy Protocol
	server node maxk.avest.by:4443 ssl verify none send-proxy
#	server node maxk.avest.by:444 ssl verify none
	# соединение по TLS с проверкой сертификата сервера
#	server node maxk.avest.by:443 check ssl ca-file /opt/AvTLSSrv/conf/TLS/ca/backend-bign.cer.pem
#	server node maxk.avest.by:444 check ssl ca-file /opt/AvTLSSrv/conf/TLS/ca/backend-rsa.cer.pem
