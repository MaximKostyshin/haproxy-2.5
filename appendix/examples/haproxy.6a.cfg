# Пример использования SNI по https (проверка хоста происходит на backend)
#
# В случае соединения по http (порт 80) haproxy передает клиенту данные соединения с maxk.avest.by:80

# Логика:
# В случае соединения по 80 haproxy передает клиенту данные соединения с maxk.avest.by:80
#
# В случае соединения через порт 443 браузер клиента проксирует установку tls-соединения c maxk.avest.by или maxw.avest.by 

global
	# Для включения записи протокола событий в файл необходимо:
	# 1. Расскомментарить все строки в этом файле
	#    с настройками, имеющим отношение к протоколам событий
	#
	# 2. Скорректировать /etc/rsyslog.conf 
	#    расскоментировать разделы с imudp и imtcp
	#    и добавить строки (с учетом содержимого данного примера)
	#     local0.* /var/log/haproxy.log
	#     local1.* /var/log/haproxy_notice.log
	# 3. Перезапустит rsyslog - sudo /etc/init.d/rsyslog restart

        # Вести обработку в файл с протоколом событий в /dev/log сохраняя в local0
#	log /dev/log	local0
#	log /dev/log	local1 notice

#	chroot /opt/AvTLSSrv
#	stats socket /opt/AvTLSSrv/logs/haproxy-admin.sock mode 660 level admin

	stats timeout 30s

#	user haproxy
#	group haproxy

	daemon

	# Путь к файлам с сертификатами корневых УЦ, используемых для построения цепочки сертификатов, передаваемых клиенту
#	ca-base /opt/AvTLSSrv/conf/TLS/ca
	# Путь к файлам с сертификатами и личными ключами сервера
#	crt-base /opt/AvTLSSrv/conf/TLS

	# каталог с файлами, в каждом из которых сертификаты УЦ из цепочки сертификатов сервера, передаваемой клиенту
#	issuers-chain-path /opt/AvTLSSrv/conf/TLS/chain

	# параметры по умолчанию для bind в разделе frontend
	ssl-default-bind-ciphers DHT-BIGN-BELT-CTR-HBELT:DHE-BIGN-BELT-CTR-HBELT:ALL
	# отключить возобнобновление сессии по состоянию сервера, сохраненному у клиента)
	ssl-default-bind-options no-tls-tickets 
#	ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

	# параметры по умолчанию для server в разделе backend
	ssl-default-server-ciphers DHT-BIGN-BELT-CTR-HBELT:DHE-BIGN-BELT-CTR-HBELT:ALL
#	ssl-default-bind-options no-tlsv10 no-tlsv11 force-tlsv12
#	ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

	# curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
#	ssl-dh-param-file /path/to/dhparam

#	tune.ssl.default-dh-param 2048

defaults
#	mode	http

	# Включить в протокол события о трафике
#	log	global
	
	# Включение или выключение сохранения в файл с протоколом событий о null соединениях
#	option	dontlognull
#	no option dontlognull

	timeout connect 5000
	timeout client  50000
	timeout server  50000
#	errorfile 400 /opt/AvTLSSrv/errors/400.http
#	errorfile 403 /opt/AvTLSSrv/errors/403.http
#	errorfile 408 /opt/AvTLSSrv/errors/408.http
#	errorfile 500 /opt/AvTLSSrv/errors/500.http
#	errorfile 502 /opt/AvTLSSrv/errors/502.http
#	errorfile 503 /opt/AvTLSSrv/errors/503.http
#	errorfile 504 /opt/AvTLSSrv/errors/504.http

frontend http_in
	mode http
	# Определение расширенного формата записей протокола события
	# добавляются сообщения о HTTP-запросах, состоянии сеанса и таймеров
#	option	httplog
	bind *:80
	default_backend http_out

backend http_out
	mode http
	balance roundrobin
	server node maxk.avest.by:80 maxconn 50 check

frontend https_in
	mode tcp
	# Определение расширенного формата записей протокола события
#	option	tcplog

	bind *:443

	tcp-request inspect-delay 5s
	tcp-request content accept if { req_ssl_hello_type 1 }
	default_backend https_out

backend https_out
	mode tcp

	use-server server_maxk_avest if { req_ssl_sni -i maxk.avest.by }
	use-server server_maxw_avest if { req_ssl_sni -i maxw.avest.by }

	option ssl-hello-chk

	server server_maxk_avest maxk.avest.by:443 check
	server server_maxw_avest maxw.avest.by:443 check
	# send-proxy используем в случае применения haproxy Proxy Protocol
#	server server_maxk_avest maxk.avest.by:4443 send-proxy check
#	server server_maxw_avest maxw.avest.by:4443 send-proxy check

