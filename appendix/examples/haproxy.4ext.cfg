# Пример использования фильтра placemark (web-сервер работает по htts) с haproxy Proxy Protocol (для проброса IP клиента)

# ВНИМАНИЕ! Используется внутренний web-сайт maxk.avest.by:
#   4443 порт - белорусская криптография, 4444 порт - криптография с использованием RSA
#   на указанных портах должна быть включена поддержка haproxy Proxy Protocol

# Логика:
# Если используется http-соединении то haproxy ПЕРЕНАПРАВЛЯЕТ на maxk.avest.by:80
# haproxy Proxy Protocol не применяется (см. пояснение backend http_out)
#
# Если при https-соединении клиент не использует avtunproxy, то haproxy ПРОСТО ПЕРЕНАПРАВЛЯЕТ на maxk.avest.by:4443 (bign).
# Если haproxy обнаруживает использование клиентом avtunproxy, то в haproxy обрабатывается tls-соединение (bign) c avtunproxy 
# (backend be_loopback, frontend fe_loopback) и далее браузер устанавливает tls-соединение с сервером maxk.avest.by:4444 (RSA),
# т.е. канал передачи ПК клиента - сервер (avtunproxy - haproxy) закрыт tls-соединением с использованием белорусской криптографии, 
# а внутри закрытого канала передается tls-трафик браузер - web-сервер.
#
# У клиента работает без avtunproxy ТОЛЬКО в браузере, поддерживающем белорусскую криптографию, а с avtunproxy работает у клиента в любом браузере.
# Дополнительно позволяет соединиться по http

# При использовании avtunproxy у клиента установка tls-соединения происходит в два этапа:
# Этап 1. Avtunproxy клиента устанавливает tls-соединнение с haproxy (см. frontend fe_loopback)
#  1. Сертификат сервера из файла /opt/AvTLSSrv/conf/TLS/server.cer.pem (см. crt в bind, раздел frontend https_in) и личный ключ либо в этом файле, либо в файле server.cer.pem.key.
#  2. В каталоге /opt/AvTLSSrv/conf/TLS/chain (см. issuers-chain-path раздел global) файл с цепочкой сертификатов УЦ (от издателя до самоподписанного) для сертификата сервера.
# Этап 2. Через haproxy (данные только транслируются "прозрачно") tls-соединение устанавливает браузер клиента с web-сервером maxk.avest.by:4444 (см. backend https_out_rsa)
#
# Примечания:
# - каталог, определенный параметром ca-base (раздел global), может быть пуст
# - в файле /etc/hosts должна содержаться строка, устанавливающая соответствие доменного имени "maxk.avest.by" с ip

# ДЛЯ РАБОТЫ ПРИМЕРА НЕОБХОДИМО на клиенте загрузить:
# 1. ОБЯЗАТЕЛЬНО. Для корректной работы avtunproxy с haproxy
#    Сертификаты УЦ, используемые в цепочке сертификатов, отправляемой сервером haproxy (см. пункт 2 выше)
#    СОС сертификатов УЦ, указанных выше
# 2. Для корректной работы браузера - корневой cертификат maxk.avest.by 

global
	# Для включения записи протокола событий в файл необходимо:
	# 1. Расскомментарить все строки в этом файле
	#    с настройками, имеющим отношение к протоколам событий
	#
	# 2. Скорректировать /etc/rsyslog.conf 
	#    расскоментировать разделы с imudp и imtcp
	#    и добавить строки (с учетом содержимого данного примера)
	#     local0.* /var/log/haproxy.log
	#     local1.* /var/log/haproxy_notice.log
	# 3. Перезапустит rsyslog - sudo /etc/init.d/rsyslog restart

        # Вести обработку в файл с протоколом событий в /dev/log сохраняя в local0
#	log /dev/log	local0
#	log /dev/log	local1 notice

#	chroot /opt/AvTLSSrv
#	stats socket /opt/AvTLSSrv/logs/haproxy-admin.sock mode 660 level admin

	stats timeout 30s

#	user haproxy
#	group haproxy

	daemon

	# Путь к файлам с сертификатами корневых УЦ, используемых для построения цепочки сертификатов, передаваемых клиенту
	ca-base /opt/AvTLSSrv/conf/TLS/ca
	# Путь к файлам с сертификатами и личными ключами сервера
#	crt-base /opt/AvTLSSrv/conf/TLS

	# каталог с файлами, в каждом из которых сертификаты УЦ из цепочки сертификатов сервера, передаваемой клиенту
	issuers-chain-path /opt/AvTLSSrv/conf/TLS/chain

	# параметры по умолчанию для bind в разделе frontend
	ssl-default-bind-ciphers DHT-BIGN-BELT-CTR-HBELT:DHE-BIGN-BELT-CTR-HBELT:ALL
	# отключить возобнобновление сессии по состоянию сервера, сохраненному у клиента)
	ssl-default-bind-options no-tls-tickets 
#	ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

	# параметры по умолчанию для server в разделе backend
	ssl-default-server-ciphers DHT-BIGN-BELT-CTR-HBELT:DHE-BIGN-BELT-CTR-HBELT:ALL
#	ssl-default-bind-options no-tlsv10 no-tlsv11 force-tlsv12
#	ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

	# curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
#	ssl-dh-param-file /path/to/dhparam

#	tune.ssl.default-dh-param 2048

defaults
#	mode	http

	# Включить в протокол события о трафике
#	log	global
	
	# Включение или выключение сохранения в файл с протоколом событий о null соединениях
#	option	dontlognull
#	no option dontlognull

	option http-server-close
	option abortonclose
	option redispatch

	timeout check           3s
	timeout client          30s  # Client and server timeout must match the longest
	timeout connect         5s
	timeout http-keep-alive 5s
	timeout http-request    10s  # A complete request may never take that long.
	timeout queue           1m   # Don't queue requests too long if saturated.
	timeout server          10s  # Time we may wait for a response from the server.

	retries 3

#	errorfile 400 /opt/AvTLSSrv/errors/400.http
#	errorfile 403 /opt/AvTLSSrv/errors/403.http
#	errorfile 408 /opt/AvTLSSrv/errors/408.http
#	errorfile 500 /opt/AvTLSSrv/errors/500.http
#	errorfile 502 /opt/AvTLSSrv/errors/502.http
#	errorfile 503 /opt/AvTLSSrv/errors/503.http
#	errorfile 504 /opt/AvTLSSrv/errors/504.http

frontend http_in
	mode http
	# Определение расширенного формата записей протокола события
	# добавляются сообщения о HTTP-запросах, состоянии сеанса и таймеров
#	option	httplog
	bind *:80

	# передать серверу ip клиента в заголовке, как значение переменной X-Real-IP
	option forwardfor header X-Real-IP # ONLY mode http

	default_backend http_out

backend http_out
	mode http
	balance roundrobin

	server node maxk.avest.by:80  maxconn 50 check
	# send-proxy используем в случае применения haproxy Proxy Protocol
	# ВНИМАНИЕ! Чтобы работало, необходимо включить на web-сервере apache по умолчания опцию RemoteIPProxyProtocol on
#	server node maxk.avest.by:80  maxconn 50 check  send-proxy

frontend https_in
	mode tcp
	# Определение расширенного формата записей протокола события
#	option	tcplog
	bind *:443
	tcp-request inspect-delay 5s
	tcp-request content accept if { req.ssl_hello_type 1 }	

	# проверка наличия в обрабатываемых данных подстроки AVTLSPROXY - признак использования avtunproxy
	acl find_AVTLSPROXY payload(0,10) -m bin 4156544c5350524f5859 # AVTLSPROXY
	
	# использование фильтра placemark - удаление из обрабатываемых данных подстроки AVTLSPROXY (если подстроки не было, то ничего и не удаляется)
	filter placemark remove-label

	# начало цикла обработки в случае, если обнаружено использование avtunproxy
	use_backend be_loopback if find_AVTLSPROXY

	# обработка, если НЕ обнаружено использование avtunproxy
	default_backend https_out

# обработка, если НЕ обнаружено использование avtunproxy
backend https_out
	mode tcp
	# Определение расширенного формата записей протокола события
#	option	tcplog
	balance roundrobin

#	server node maxk.avest.by:443 check
	# send-proxy используем в случае применения haproxy Proxy Protocol
	server node maxk.avest.by:4443 check send-proxy

# дальнейшее используется при обработке в случае обнаружения использования avtunproxy
backend be_loopback
	mode tcp
	balance roundrobin

#	server loopback_tls abns@avtunproxy
	# send-proxy используем в случае применения haproxy Proxy Protocol
	server loopback_tls abns@avtunproxy send-proxy

frontend fe_loopback
	mode tcp
	# Определение расширенного формата записей протокола события
#	option	tcplog

	# обработка tls-соединения, организованного avtunproxy, с белорусскими криптоалгоритмами
	#  файл с цепочкой (если отсутствует в opt/haproxy/ssl/private/server.pem) - см. в параметре issuers-chain-path каталог файлов с цепочками сертификатов

#	bind abns@avtunproxy ssl crt /opt/AvTLSSrv/conf/TLS/server.cer.pem
	# accept-proxy используем в случае применения haproxy Proxy Protocol
	bind abns@avtunproxy ssl crt /opt/AvTLSSrv/conf/TLS/server.cer.pem  accept-proxy

	default_backend https_out_rsa

backend https_out_rsa
	mode tcp
	balance roundrobin
	
#	server node maxk.avest.by:444 check
	# send-proxy используем в случае применения haproxy Proxy Protocol
	server node maxk.avest.by:4444 check send-proxy
